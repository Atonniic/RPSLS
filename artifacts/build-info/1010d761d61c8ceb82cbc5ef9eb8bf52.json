{
	"id": "1010d761d61c8ceb82cbc5ef9eb8bf52",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"WVAX,sol.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ninterface IWAVAX is IERC20 {\r\n    function deposit() external payable;\r\n    function withdraw(uint wad) external;\r\n}\r\n\r\ncontract WAVAXExample {\r\n    IWAVAX public WAVAX;\r\n    \r\n    constructor(address _wavax) {\r\n        WAVAX = IWAVAX(_wavax);\r\n    }\r\n\r\n    function wrapAVAX() external payable {\r\n        require(msg.value > 0, \"Must send AVAX\");\r\n        WAVAX.deposit{value: msg.value}();\r\n    }\r\n\r\n    function unwrapWAVAX(uint amount) external {\r\n        WAVAX.withdraw(amount);\r\n        payable(msg.sender).transfer(amount);\r\n    }\r\n\r\n    function transferWAVAX(address to, uint amount) external {\r\n        WAVAX.transfer(to, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"WVAX,sol.sol": {
				"IWAVAX": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"WVAX,sol.sol\":\"IWAVAX\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"WVAX,sol.sol\":{\"keccak256\":\"0x2b18551372bc03fe628c569dd69da8f30ff937f3a1b53cdbdbf9c3d27b6a2dc6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a3849fb94a579b18b2aca7c2dd1f6779f8b4b58db9ccb121a055137d4257e2bc\",\"dweb:/ipfs/QmXGEsUvKda5tuvuHreZi8mLNwnnZ62HJvez8tBvkuy4tT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"WAVAXExample": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_wavax",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "WAVAX",
							"outputs": [
								{
									"internalType": "contract IWAVAX",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferWAVAX",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "unwrapWAVAX",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wrapAVAX",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"WVAX,sol.sol\":252:782  contract WAVAXExample {... */\n  mstore(0x40, 0x80)\n    /* \"WVAX,sol.sol\":313:382  constructor(address _wavax) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"WVAX,sol.sol\":367:373  _wavax */\n  dup1\n    /* \"WVAX,sol.sol\":352:357  WAVAX */\n  0x00\n  dup1\n    /* \"WVAX,sol.sol\":352:374  WAVAX = IWAVAX(_wavax) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"WVAX,sol.sol\":313:382  constructor(address _wavax) {... */\n  pop\n    /* \"WVAX,sol.sol\":252:782  contract WAVAXExample {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"WVAX,sol.sol\":252:782  contract WAVAXExample {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"WVAX,sol.sol\":252:782  contract WAVAXExample {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x08b9642b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x73b295c2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xee42ba0f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf4fbbca2\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"WVAX,sol.sol\":677:779  function transferWAVAX(address to, uint amount) external {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"WVAX,sol.sol\":281:300  IWAVAX public WAVAX */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WVAX,sol.sol\":538:669  function unwrapWAVAX(uint amount) external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"WVAX,sol.sol\":390:530  function wrapAVAX() external payable {... */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"WVAX,sol.sol\":677:779  function transferWAVAX(address to, uint amount) external {... */\n    tag_10:\n        /* \"WVAX,sol.sol\":745:750  WAVAX */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"WVAX,sol.sol\":745:759  WAVAX.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"WVAX,sol.sol\":760:762  to */\n      dup4\n        /* \"WVAX,sol.sol\":764:770  amount */\n      dup4\n        /* \"WVAX,sol.sol\":745:771  WAVAX.transfer(to, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_24\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      pop\n        /* \"WVAX,sol.sol\":677:779  function transferWAVAX(address to, uint amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"WVAX,sol.sol\":281:300  IWAVAX public WAVAX */\n    tag_13:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"WVAX,sol.sol\":538:669  function unwrapWAVAX(uint amount) external {... */\n    tag_20:\n        /* \"WVAX,sol.sol\":592:597  WAVAX */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"WVAX,sol.sol\":592:606  WAVAX.withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2e1a7d4d\n        /* \"WVAX,sol.sol\":607:613  amount */\n      dup3\n        /* \"WVAX,sol.sol\":592:614  WAVAX.withdraw(amount) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n        /* \"WVAX,sol.sol\":633:643  msg.sender */\n      caller\n        /* \"WVAX,sol.sol\":625:653  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"WVAX,sol.sol\":625:661  payable(msg.sender).transfer(amount) */\n      0x08fc\n        /* \"WVAX,sol.sol\":654:660  amount */\n      dup3\n        /* \"WVAX,sol.sol\":625:661  payable(msg.sender).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n        /* \"WVAX,sol.sol\":538:669  function unwrapWAVAX(uint amount) external {... */\n      pop\n      jump\t// out\n        /* \"WVAX,sol.sol\":390:530  function wrapAVAX() external payable {... */\n    tag_22:\n        /* \"WVAX,sol.sol\":458:459  0 */\n      0x00\n        /* \"WVAX,sol.sol\":446:455  msg.value */\n      callvalue\n        /* \"WVAX,sol.sol\":446:459  msg.value > 0 */\n      gt\n        /* \"WVAX,sol.sol\":438:478  require(msg.value > 0, \"Must send AVAX\") */\n      tag_39\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_39:\n        /* \"WVAX,sol.sol\":489:494  WAVAX */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"WVAX,sol.sol\":489:502  WAVAX.deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0e30db0\n        /* \"WVAX,sol.sol\":510:519  msg.value */\n      callvalue\n        /* \"WVAX,sol.sol\":489:522  WAVAX.deposit{value: msg.value}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"WVAX,sol.sol\":390:530  function wrapAVAX() external payable {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_46:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_48:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_49:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_74\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_48\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_50:\n        /* \"#utility.yul\":641:665   */\n      tag_76\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_49\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_77\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_77:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_51:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_79\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_50\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_52:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_53:\n        /* \"#utility.yul\":997:1021   */\n      tag_82\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_52\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_83\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_83:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_54:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_85\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_53\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_9:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_88\n      tag_46\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1290:1409   */\n    tag_87:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_89\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_51\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_90\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_54\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1737   */\n    tag_55:\n        /* \"#utility.yul\":1705:1708   */\n      0x00\n        /* \"#utility.yul\":1726:1731   */\n      dup2\n        /* \"#utility.yul\":1719:1731   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1743:1885   */\n    tag_56:\n        /* \"#utility.yul\":1793:1802   */\n      0x00\n        /* \"#utility.yul\":1826:1879   */\n      tag_93\n        /* \"#utility.yul\":1844:1878   */\n      tag_94\n        /* \"#utility.yul\":1853:1877   */\n      tag_95\n        /* \"#utility.yul\":1871:1876   */\n      dup5\n        /* \"#utility.yul\":1853:1877   */\n      tag_48\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1844:1878   */\n      tag_55\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1826:1879   */\n      tag_48\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1813:1879   */\n      swap1\n      pop\n        /* \"#utility.yul\":1743:1885   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1891:2017   */\n    tag_57:\n        /* \"#utility.yul\":1941:1950   */\n      0x00\n        /* \"#utility.yul\":1974:2011   */\n      tag_97\n        /* \"#utility.yul\":2005:2010   */\n      dup3\n        /* \"#utility.yul\":1974:2011   */\n      tag_56\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1961:2011   */\n      swap1\n      pop\n        /* \"#utility.yul\":1891:2017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2023:2162   */\n    tag_58:\n        /* \"#utility.yul\":2086:2095   */\n      0x00\n        /* \"#utility.yul\":2119:2156   */\n      tag_99\n        /* \"#utility.yul\":2150:2155   */\n      dup3\n        /* \"#utility.yul\":2119:2156   */\n      tag_57\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2106:2156   */\n      swap1\n      pop\n        /* \"#utility.yul\":2023:2162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2168:2325   */\n    tag_59:\n        /* \"#utility.yul\":2268:2318   */\n      tag_101\n        /* \"#utility.yul\":2312:2317   */\n      dup2\n        /* \"#utility.yul\":2268:2318   */\n      tag_58\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2263:2266   */\n      dup3\n        /* \"#utility.yul\":2256:2319   */\n      mstore\n        /* \"#utility.yul\":2168:2325   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2331:2579   */\n    tag_15:\n        /* \"#utility.yul\":2437:2441   */\n      0x00\n        /* \"#utility.yul\":2475:2477   */\n      0x20\n        /* \"#utility.yul\":2464:2473   */\n      dup3\n        /* \"#utility.yul\":2460:2478   */\n      add\n        /* \"#utility.yul\":2452:2478   */\n      swap1\n      pop\n        /* \"#utility.yul\":2488:2572   */\n      tag_103\n        /* \"#utility.yul\":2569:2570   */\n      0x00\n        /* \"#utility.yul\":2558:2567   */\n      dup4\n        /* \"#utility.yul\":2554:2571   */\n      add\n        /* \"#utility.yul\":2545:2551   */\n      dup5\n        /* \"#utility.yul\":2488:2572   */\n      tag_59\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2331:2579   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2585:2914   */\n    tag_19:\n        /* \"#utility.yul\":2644:2650   */\n      0x00\n        /* \"#utility.yul\":2693:2695   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2672:2679   */\n      dup5\n        /* \"#utility.yul\":2668:2691   */\n      sub\n        /* \"#utility.yul\":2664:2696   */\n      slt\n        /* \"#utility.yul\":2661:2780   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":2699:2778   */\n      tag_106\n      tag_46\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2661:2780   */\n    tag_105:\n        /* \"#utility.yul\":2819:2820   */\n      0x00\n        /* \"#utility.yul\":2844:2897   */\n      tag_107\n        /* \"#utility.yul\":2889:2896   */\n      dup5\n        /* \"#utility.yul\":2880:2886   */\n      dup3\n        /* \"#utility.yul\":2869:2878   */\n      dup6\n        /* \"#utility.yul\":2865:2887   */\n      add\n        /* \"#utility.yul\":2844:2897   */\n      tag_54\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2834:2897   */\n      swap2\n      pop\n        /* \"#utility.yul\":2790:2907   */\n      pop\n        /* \"#utility.yul\":2585:2914   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2920:3038   */\n    tag_60:\n        /* \"#utility.yul\":3007:3031   */\n      tag_109\n        /* \"#utility.yul\":3025:3030   */\n      dup2\n        /* \"#utility.yul\":3007:3031   */\n      tag_49\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3002:3005   */\n      dup3\n        /* \"#utility.yul\":2995:3032   */\n      mstore\n        /* \"#utility.yul\":2920:3038   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3044:3162   */\n    tag_61:\n        /* \"#utility.yul\":3131:3155   */\n      tag_111\n        /* \"#utility.yul\":3149:3154   */\n      dup2\n        /* \"#utility.yul\":3131:3155   */\n      tag_52\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":3126:3129   */\n      dup3\n        /* \"#utility.yul\":3119:3156   */\n      mstore\n        /* \"#utility.yul\":3044:3162   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3168:3500   */\n    tag_25:\n        /* \"#utility.yul\":3289:3293   */\n      0x00\n        /* \"#utility.yul\":3327:3329   */\n      0x40\n        /* \"#utility.yul\":3316:3325   */\n      dup3\n        /* \"#utility.yul\":3312:3330   */\n      add\n        /* \"#utility.yul\":3304:3330   */\n      swap1\n      pop\n        /* \"#utility.yul\":3340:3411   */\n      tag_113\n        /* \"#utility.yul\":3408:3409   */\n      0x00\n        /* \"#utility.yul\":3397:3406   */\n      dup4\n        /* \"#utility.yul\":3393:3410   */\n      add\n        /* \"#utility.yul\":3384:3390   */\n      dup6\n        /* \"#utility.yul\":3340:3411   */\n      tag_60\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3421:3493   */\n      tag_114\n        /* \"#utility.yul\":3489:3491   */\n      0x20\n        /* \"#utility.yul\":3478:3487   */\n      dup4\n        /* \"#utility.yul\":3474:3492   */\n      add\n        /* \"#utility.yul\":3465:3471   */\n      dup5\n        /* \"#utility.yul\":3421:3493   */\n      tag_61\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3168:3500   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3506:3596   */\n    tag_62:\n        /* \"#utility.yul\":3540:3547   */\n      0x00\n        /* \"#utility.yul\":3583:3588   */\n      dup2\n        /* \"#utility.yul\":3576:3589   */\n      iszero\n        /* \"#utility.yul\":3569:3590   */\n      iszero\n        /* \"#utility.yul\":3558:3590   */\n      swap1\n      pop\n        /* \"#utility.yul\":3506:3596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3602:3718   */\n    tag_63:\n        /* \"#utility.yul\":3672:3693   */\n      tag_117\n        /* \"#utility.yul\":3687:3692   */\n      dup2\n        /* \"#utility.yul\":3672:3693   */\n      tag_62\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":3665:3670   */\n      dup2\n        /* \"#utility.yul\":3662:3694   */\n      eq\n        /* \"#utility.yul\":3652:3712   */\n      tag_118\n      jumpi\n        /* \"#utility.yul\":3708:3709   */\n      0x00\n        /* \"#utility.yul\":3705:3706   */\n      dup1\n        /* \"#utility.yul\":3698:3710   */\n      revert\n        /* \"#utility.yul\":3652:3712   */\n    tag_118:\n        /* \"#utility.yul\":3602:3718   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3724:3861   */\n    tag_64:\n        /* \"#utility.yul\":3778:3783   */\n      0x00\n        /* \"#utility.yul\":3809:3815   */\n      dup2\n        /* \"#utility.yul\":3803:3816   */\n      mload\n        /* \"#utility.yul\":3794:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3825:3855   */\n      tag_120\n        /* \"#utility.yul\":3849:3854   */\n      dup2\n        /* \"#utility.yul\":3825:3855   */\n      tag_63\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3724:3861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3867:4212   */\n    tag_29:\n        /* \"#utility.yul\":3934:3940   */\n      0x00\n        /* \"#utility.yul\":3983:3985   */\n      0x20\n        /* \"#utility.yul\":3971:3980   */\n      dup3\n        /* \"#utility.yul\":3962:3969   */\n      dup5\n        /* \"#utility.yul\":3958:3981   */\n      sub\n        /* \"#utility.yul\":3954:3986   */\n      slt\n        /* \"#utility.yul\":3951:4070   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":3989:4068   */\n      tag_123\n      tag_46\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3951:4070   */\n    tag_122:\n        /* \"#utility.yul\":4109:4110   */\n      0x00\n        /* \"#utility.yul\":4134:4195   */\n      tag_124\n        /* \"#utility.yul\":4187:4194   */\n      dup5\n        /* \"#utility.yul\":4178:4184   */\n      dup3\n        /* \"#utility.yul\":4167:4176   */\n      dup6\n        /* \"#utility.yul\":4163:4185   */\n      add\n        /* \"#utility.yul\":4134:4195   */\n      tag_64\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":4124:4195   */\n      swap2\n      pop\n        /* \"#utility.yul\":4080:4205   */\n      pop\n        /* \"#utility.yul\":3867:4212   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4218:4440   */\n    tag_32:\n        /* \"#utility.yul\":4311:4315   */\n      0x00\n        /* \"#utility.yul\":4349:4351   */\n      0x20\n        /* \"#utility.yul\":4338:4347   */\n      dup3\n        /* \"#utility.yul\":4334:4352   */\n      add\n        /* \"#utility.yul\":4326:4352   */\n      swap1\n      pop\n        /* \"#utility.yul\":4362:4433   */\n      tag_126\n        /* \"#utility.yul\":4430:4431   */\n      0x00\n        /* \"#utility.yul\":4419:4428   */\n      dup4\n        /* \"#utility.yul\":4415:4432   */\n      add\n        /* \"#utility.yul\":4406:4412   */\n      dup5\n        /* \"#utility.yul\":4362:4433   */\n      tag_61\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":4218:4440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4446:4615   */\n    tag_65:\n        /* \"#utility.yul\":4530:4541   */\n      0x00\n        /* \"#utility.yul\":4564:4570   */\n      dup3\n        /* \"#utility.yul\":4559:4562   */\n      dup3\n        /* \"#utility.yul\":4552:4571   */\n      mstore\n        /* \"#utility.yul\":4604:4608   */\n      0x20\n        /* \"#utility.yul\":4599:4602   */\n      dup3\n        /* \"#utility.yul\":4595:4609   */\n      add\n        /* \"#utility.yul\":4580:4609   */\n      swap1\n      pop\n        /* \"#utility.yul\":4446:4615   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4621:4785   */\n    tag_66:\n        /* \"#utility.yul\":4761:4777   */\n      0x4d7573742073656e642041564158000000000000000000000000000000000000\n        /* \"#utility.yul\":4757:4758   */\n      0x00\n        /* \"#utility.yul\":4749:4755   */\n      dup3\n        /* \"#utility.yul\":4745:4759   */\n      add\n        /* \"#utility.yul\":4738:4778   */\n      mstore\n        /* \"#utility.yul\":4621:4785   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4791:5157   */\n    tag_67:\n        /* \"#utility.yul\":4933:4936   */\n      0x00\n        /* \"#utility.yul\":4954:5021   */\n      tag_130\n        /* \"#utility.yul\":5018:5020   */\n      0x0e\n        /* \"#utility.yul\":5013:5016   */\n      dup4\n        /* \"#utility.yul\":4954:5021   */\n      tag_65\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4947:5021   */\n      swap2\n      pop\n        /* \"#utility.yul\":5030:5123   */\n      tag_131\n        /* \"#utility.yul\":5119:5122   */\n      dup3\n        /* \"#utility.yul\":5030:5123   */\n      tag_66\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"#utility.yul\":5143:5146   */\n      dup3\n        /* \"#utility.yul\":5139:5151   */\n      add\n        /* \"#utility.yul\":5132:5151   */\n      swap1\n      pop\n        /* \"#utility.yul\":4791:5157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5163:5582   */\n    tag_41:\n        /* \"#utility.yul\":5329:5333   */\n      0x00\n        /* \"#utility.yul\":5367:5369   */\n      0x20\n        /* \"#utility.yul\":5356:5365   */\n      dup3\n        /* \"#utility.yul\":5352:5370   */\n      add\n        /* \"#utility.yul\":5344:5370   */\n      swap1\n      pop\n        /* \"#utility.yul\":5416:5425   */\n      dup2\n        /* \"#utility.yul\":5410:5414   */\n      dup2\n        /* \"#utility.yul\":5406:5426   */\n      sub\n        /* \"#utility.yul\":5402:5403   */\n      0x00\n        /* \"#utility.yul\":5391:5400   */\n      dup4\n        /* \"#utility.yul\":5387:5404   */\n      add\n        /* \"#utility.yul\":5380:5427   */\n      mstore\n        /* \"#utility.yul\":5444:5575   */\n      tag_133\n        /* \"#utility.yul\":5570:5574   */\n      dup2\n        /* \"#utility.yul\":5444:5575   */\n      tag_67\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":5436:5575   */\n      swap1\n      pop\n        /* \"#utility.yul\":5163:5582   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220047b3894bc1d6e1826decc6467ff2c4bf1ea34c0d1b1386374b5662e1389f89d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_106": {
									"entryPoint": null,
									"id": 106,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:2",
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "611:79:2",
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:2",
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:2",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:2",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nativeSrc": "670:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nativeSrc": "670:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nativeSrc": "641:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nativeSrc": "631:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nativeSrc": "624:43:2",
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nativeSrc": "621:63:2",
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:2",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nativeSrc": "759:80:2",
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nativeSrc": "769:22:2",
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nativeSrc": "778:13:2",
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nativeSrc": "800:33:2",
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nativeSrc": "800:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:2",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:2",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:2",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nativeSrc": "922:274:2",
													"nodeType": "YulBlock",
													"src": "922:274:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:2",
																"nodeType": "YulBlock",
																"src": "968:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:2"
																			},
																			"nativeSrc": "970:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:2"
																		},
																		"nativeSrc": "970:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:2"
																		},
																		"nativeSrc": "939:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:2",
																		"nodeType": "YulLiteral",
																		"src": "964:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:2"
																},
																"nativeSrc": "935:32:2",
																"nodeType": "YulFunctionCall",
																"src": "935:32:2"
															},
															"nativeSrc": "932:119:2",
															"nodeType": "YulIf",
															"src": "932:119:2"
														},
														{
															"nativeSrc": "1061:128:2",
															"nodeType": "YulBlock",
															"src": "1061:128:2",
															"statements": [
																{
																	"nativeSrc": "1076:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:2",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:2"
																				},
																				"nativeSrc": "1147:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:2",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:2"
																		},
																		"nativeSrc": "1115:64:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:2",
														"nodeType": "YulTypedName",
														"src": "892:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:2",
														"nodeType": "YulTypedName",
														"src": "903:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:2",
														"nodeType": "YulTypedName",
														"src": "915:6:2",
														"type": ""
													}
												],
												"src": "845:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516106fa3803806106fa833981810160405281019061003191906100d4565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b6100b381610099565b81146100bd575f80fd5b50565b5f815190506100ce816100aa565b92915050565b5f602082840312156100e9576100e8610076565b5b5f6100f6848285016100c0565b91505092915050565b6105ee8061010c5f395ff3fe60806040526004361061003e575f3560e01c806308b9642b1461004257806373b295c21461006a578063ee42ba0f14610094578063f4fbbca2146100bc575b5f80fd5b34801561004d575f80fd5b50610068600480360381019061006391906103a5565b6100c6565b005b348015610075575f80fd5b5061007e610165565b60405161008b919061043e565b60405180910390f35b34801561009f575f80fd5b506100ba60048036038101906100b59190610457565b610188565b005b6100c4610254565b005b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016101209291906104a0565b6020604051808303815f875af115801561013c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061016091906104fc565b505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b81526004016101e09190610527565b5f604051808303815f87803b1580156101f7575f80fd5b505af1158015610209573d5f803e3d5ffd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610250573d5f803e3d5ffd5b5050565b5f3411610296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028d9061059a565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b1580156102fb575f80fd5b505af115801561030d573d5f803e3d5ffd5b5050505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61034182610318565b9050919050565b61035181610337565b811461035b575f80fd5b50565b5f8135905061036c81610348565b92915050565b5f819050919050565b61038481610372565b811461038e575f80fd5b50565b5f8135905061039f8161037b565b92915050565b5f80604083850312156103bb576103ba610314565b5b5f6103c88582860161035e565b92505060206103d985828601610391565b9150509250929050565b5f819050919050565b5f6104066104016103fc84610318565b6103e3565b610318565b9050919050565b5f610417826103ec565b9050919050565b5f6104288261040d565b9050919050565b6104388161041e565b82525050565b5f6020820190506104515f83018461042f565b92915050565b5f6020828403121561046c5761046b610314565b5b5f61047984828501610391565b91505092915050565b61048b81610337565b82525050565b61049a81610372565b82525050565b5f6040820190506104b35f830185610482565b6104c06020830184610491565b9392505050565b5f8115159050919050565b6104db816104c7565b81146104e5575f80fd5b50565b5f815190506104f6816104d2565b92915050565b5f6020828403121561051157610510610314565b5b5f61051e848285016104e8565b91505092915050565b5f60208201905061053a5f830184610491565b92915050565b5f82825260208201905092915050565b7f4d7573742073656e6420415641580000000000000000000000000000000000005f82015250565b5f610584600e83610540565b915061058f82610550565b602082019050919050565b5f6020820190508181035f8301526105b181610578565b905091905056fea2646970667358221220047b3894bc1d6e1826decc6467ff2c4bf1ea34c0d1b1386374b5662e1389f89d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x6FA CODESIZE SUB DUP1 PUSH2 0x6FA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA3 DUP3 PUSH2 0x7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3 DUP2 PUSH2 0x99 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCE DUP2 PUSH2 0xAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9 JUMPI PUSH2 0xE8 PUSH2 0x76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF6 DUP5 DUP3 DUP6 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5EE DUP1 PUSH2 0x10C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B9642B EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x73B295C2 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0xEE42BA0F EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xF4FBBCA2 EQ PUSH2 0xBC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0xC6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x457 JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC4 PUSH2 0x254 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120 SWAP3 SWAP2 SWAP1 PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x4FC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x527 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x209 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x250 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D SWAP1 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x30D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x341 DUP3 PUSH2 0x318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x351 DUP2 PUSH2 0x337 JUMP JUMPDEST DUP2 EQ PUSH2 0x35B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36C DUP2 PUSH2 0x348 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x384 DUP2 PUSH2 0x372 JUMP JUMPDEST DUP2 EQ PUSH2 0x38E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x39F DUP2 PUSH2 0x37B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x314 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C8 DUP6 DUP3 DUP7 ADD PUSH2 0x35E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3D9 DUP6 DUP3 DUP7 ADD PUSH2 0x391 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x406 PUSH2 0x401 PUSH2 0x3FC DUP5 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST PUSH2 0x318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x417 DUP3 PUSH2 0x3EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x428 DUP3 PUSH2 0x40D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x438 DUP2 PUSH2 0x41E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x451 PUSH0 DUP4 ADD DUP5 PUSH2 0x42F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46C JUMPI PUSH2 0x46B PUSH2 0x314 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x479 DUP5 DUP3 DUP6 ADD PUSH2 0x391 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x48B DUP2 PUSH2 0x337 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x49A DUP2 PUSH2 0x372 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4B3 PUSH0 DUP4 ADD DUP6 PUSH2 0x482 JUMP JUMPDEST PUSH2 0x4C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x491 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DB DUP2 PUSH2 0x4C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x4E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4F6 DUP2 PUSH2 0x4D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x511 JUMPI PUSH2 0x510 PUSH2 0x314 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x51E DUP5 DUP3 DUP6 ADD PUSH2 0x4E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x53A PUSH0 DUP4 ADD DUP5 PUSH2 0x491 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642041564158000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x584 PUSH1 0xE DUP4 PUSH2 0x540 JUMP JUMPDEST SWAP2 POP PUSH2 0x58F DUP3 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5B1 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV PUSH28 0x3894BC1D6E1826DECC6467FF2C4BF1EA34C0D1B1386374B5662E1389 0xF8 SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "252:530:1:-:0;;;313:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;367:6;352:5;;:22;;;;;;;;;;;;;;;;;;313:69;252:530;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;252:530:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@WAVAX_94": {
									"entryPoint": 357,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferWAVAX_162": {
									"entryPoint": 198,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@unwrapWAVAX_147": {
									"entryPoint": 392,
									"id": 147,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@wrapAVAX_126": {
									"entryPoint": 596,
									"id": 126,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IWAVAX_$91_to_t_address_fromStack": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_44ac248910427a03fc44baa148f35b4c487999862878dc11aa5d9379e97b9f58_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IWAVAX_$91__to_t_address__fromStack_reversed": {
									"entryPoint": 1086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_44ac248910427a03fc44baa148f35b4c487999862878dc11aa5d9379e97b9f58__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IWAVAX_$91_to_t_address": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_44ac248910427a03fc44baa148f35b4c487999862878dc11aa5d9379e97b9f58": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5585:2",
										"nodeType": "YulBlock",
										"src": "0:5585:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "611:79:2",
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:2",
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:2",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:2",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nativeSrc": "670:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nativeSrc": "670:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nativeSrc": "641:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nativeSrc": "631:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nativeSrc": "624:43:2",
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nativeSrc": "621:63:2",
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:2",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nativeSrc": "748:87:2",
													"nodeType": "YulBlock",
													"src": "748:87:2",
													"statements": [
														{
															"nativeSrc": "758:29:2",
															"nodeType": "YulAssignment",
															"src": "758:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:2"
																},
																"nativeSrc": "767:20:2",
																"nodeType": "YulFunctionCall",
																"src": "767:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:2"
																},
																"nativeSrc": "796:33:2",
																"nodeType": "YulFunctionCall",
																"src": "796:33:2"
															},
															"nativeSrc": "796:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:2",
														"nodeType": "YulTypedName",
														"src": "726:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:2",
														"nodeType": "YulTypedName",
														"src": "734:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:2",
														"nodeType": "YulTypedName",
														"src": "742:5:2",
														"type": ""
													}
												],
												"src": "696:139:2"
											},
											{
												"body": {
													"nativeSrc": "886:32:2",
													"nodeType": "YulBlock",
													"src": "886:32:2",
													"statements": [
														{
															"nativeSrc": "896:16:2",
															"nodeType": "YulAssignment",
															"src": "896:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:2",
																"nodeType": "YulIdentifier",
																"src": "907:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:2",
														"nodeType": "YulTypedName",
														"src": "868:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:2",
														"nodeType": "YulTypedName",
														"src": "878:7:2",
														"type": ""
													}
												],
												"src": "841:77:2"
											},
											{
												"body": {
													"nativeSrc": "967:79:2",
													"nodeType": "YulBlock",
													"src": "967:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:2",
																"nodeType": "YulBlock",
																"src": "1024:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:2"
																			},
																			"nativeSrc": "1026:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:2"
																		},
																		"nativeSrc": "1026:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:2"
																				},
																				"nativeSrc": "997:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:2"
																		},
																		"nativeSrc": "987:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:2"
																},
																"nativeSrc": "980:43:2",
																"nodeType": "YulFunctionCall",
																"src": "980:43:2"
															},
															"nativeSrc": "977:63:2",
															"nodeType": "YulIf",
															"src": "977:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:2",
														"nodeType": "YulTypedName",
														"src": "960:5:2",
														"type": ""
													}
												],
												"src": "924:122:2"
											},
											{
												"body": {
													"nativeSrc": "1104:87:2",
													"nodeType": "YulBlock",
													"src": "1104:87:2",
													"statements": [
														{
															"nativeSrc": "1114:29:2",
															"nodeType": "YulAssignment",
															"src": "1114:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:2"
																},
																"nativeSrc": "1123:20:2",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:2"
																},
																"nativeSrc": "1152:33:2",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:2"
															},
															"nativeSrc": "1152:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:2",
														"nodeType": "YulTypedName",
														"src": "1082:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:2",
														"nodeType": "YulTypedName",
														"src": "1090:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:2",
														"nodeType": "YulTypedName",
														"src": "1098:5:2",
														"type": ""
													}
												],
												"src": "1052:139:2"
											},
											{
												"body": {
													"nativeSrc": "1280:391:2",
													"nodeType": "YulBlock",
													"src": "1280:391:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:2",
																"nodeType": "YulBlock",
																"src": "1326:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:2"
																			},
																			"nativeSrc": "1328:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:2"
																		},
																		"nativeSrc": "1328:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:2"
																		},
																		"nativeSrc": "1297:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:2"
																},
																"nativeSrc": "1293:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:2"
															},
															"nativeSrc": "1290:119:2",
															"nodeType": "YulIf",
															"src": "1290:119:2"
														},
														{
															"nativeSrc": "1419:117:2",
															"nodeType": "YulBlock",
															"src": "1419:117:2",
															"statements": [
																{
																	"nativeSrc": "1434:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:2"
																				},
																				"nativeSrc": "1494:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:2"
																		},
																		"nativeSrc": "1473:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:2",
															"nodeType": "YulBlock",
															"src": "1546:118:2",
															"statements": [
																{
																	"nativeSrc": "1561:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:2"
																				},
																				"nativeSrc": "1622:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:2"
																		},
																		"nativeSrc": "1601:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:2",
														"nodeType": "YulTypedName",
														"src": "1242:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:2",
														"nodeType": "YulTypedName",
														"src": "1253:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:2",
														"nodeType": "YulTypedName",
														"src": "1265:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:2",
														"nodeType": "YulTypedName",
														"src": "1273:6:2",
														"type": ""
													}
												],
												"src": "1197:474:2"
											},
											{
												"body": {
													"nativeSrc": "1709:28:2",
													"nodeType": "YulBlock",
													"src": "1709:28:2",
													"statements": [
														{
															"nativeSrc": "1719:12:2",
															"nodeType": "YulAssignment",
															"src": "1719:12:2",
															"value": {
																"name": "value",
																"nativeSrc": "1726:5:2",
																"nodeType": "YulIdentifier",
																"src": "1726:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1719:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1719:3:2"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1677:60:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1695:5:2",
														"nodeType": "YulTypedName",
														"src": "1695:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1705:3:2",
														"nodeType": "YulTypedName",
														"src": "1705:3:2",
														"type": ""
													}
												],
												"src": "1677:60:2"
											},
											{
												"body": {
													"nativeSrc": "1803:82:2",
													"nodeType": "YulBlock",
													"src": "1803:82:2",
													"statements": [
														{
															"nativeSrc": "1813:66:2",
															"nodeType": "YulAssignment",
															"src": "1813:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1871:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1871:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1853:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "1853:17:2"
																				},
																				"nativeSrc": "1853:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1853:24:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1844:8:2",
																			"nodeType": "YulIdentifier",
																			"src": "1844:8:2"
																		},
																		"nativeSrc": "1844:34:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1844:34:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1826:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "1826:17:2"
																},
																"nativeSrc": "1826:53:2",
																"nodeType": "YulFunctionCall",
																"src": "1826:53:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1813:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "1813:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1743:142:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1783:5:2",
														"nodeType": "YulTypedName",
														"src": "1783:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1793:9:2",
														"nodeType": "YulTypedName",
														"src": "1793:9:2",
														"type": ""
													}
												],
												"src": "1743:142:2"
											},
											{
												"body": {
													"nativeSrc": "1951:66:2",
													"nodeType": "YulBlock",
													"src": "1951:66:2",
													"statements": [
														{
															"nativeSrc": "1961:50:2",
															"nodeType": "YulAssignment",
															"src": "1961:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2005:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2005:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1974:30:2",
																	"nodeType": "YulIdentifier",
																	"src": "1974:30:2"
																},
																"nativeSrc": "1974:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1974:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1961:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "1961:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1891:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1931:5:2",
														"nodeType": "YulTypedName",
														"src": "1931:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1941:9:2",
														"nodeType": "YulTypedName",
														"src": "1941:9:2",
														"type": ""
													}
												],
												"src": "1891:126:2"
											},
											{
												"body": {
													"nativeSrc": "2096:66:2",
													"nodeType": "YulBlock",
													"src": "2096:66:2",
													"statements": [
														{
															"nativeSrc": "2106:50:2",
															"nodeType": "YulAssignment",
															"src": "2106:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2150:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2150:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2119:30:2",
																	"nodeType": "YulIdentifier",
																	"src": "2119:30:2"
																},
																"nativeSrc": "2119:37:2",
																"nodeType": "YulFunctionCall",
																"src": "2119:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2106:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "2106:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IWAVAX_$91_to_t_address",
												"nativeSrc": "2023:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2076:5:2",
														"nodeType": "YulTypedName",
														"src": "2076:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2086:9:2",
														"nodeType": "YulTypedName",
														"src": "2086:9:2",
														"type": ""
													}
												],
												"src": "2023:139:2"
											},
											{
												"body": {
													"nativeSrc": "2246:79:2",
													"nodeType": "YulBlock",
													"src": "2246:79:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2263:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2263:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2312:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2312:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IWAVAX_$91_to_t_address",
																			"nativeSrc": "2268:43:2",
																			"nodeType": "YulIdentifier",
																			"src": "2268:43:2"
																		},
																		"nativeSrc": "2268:50:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2268:50:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2256:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:2"
																},
																"nativeSrc": "2256:63:2",
																"nodeType": "YulFunctionCall",
																"src": "2256:63:2"
															},
															"nativeSrc": "2256:63:2",
															"nodeType": "YulExpressionStatement",
															"src": "2256:63:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_IWAVAX_$91_to_t_address_fromStack",
												"nativeSrc": "2168:157:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2234:5:2",
														"nodeType": "YulTypedName",
														"src": "2234:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2241:3:2",
														"nodeType": "YulTypedName",
														"src": "2241:3:2",
														"type": ""
													}
												],
												"src": "2168:157:2"
											},
											{
												"body": {
													"nativeSrc": "2442:137:2",
													"nodeType": "YulBlock",
													"src": "2442:137:2",
													"statements": [
														{
															"nativeSrc": "2452:26:2",
															"nodeType": "YulAssignment",
															"src": "2452:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2464:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2464:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2475:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2475:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2460:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2460:3:2"
																},
																"nativeSrc": "2460:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2460:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2452:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2452:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2545:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2545:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2558:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2558:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2569:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2569:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2554:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2554:3:2"
																		},
																		"nativeSrc": "2554:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2554:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IWAVAX_$91_to_t_address_fromStack",
																	"nativeSrc": "2488:56:2",
																	"nodeType": "YulIdentifier",
																	"src": "2488:56:2"
																},
																"nativeSrc": "2488:84:2",
																"nodeType": "YulFunctionCall",
																"src": "2488:84:2"
															},
															"nativeSrc": "2488:84:2",
															"nodeType": "YulExpressionStatement",
															"src": "2488:84:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IWAVAX_$91__to_t_address__fromStack_reversed",
												"nativeSrc": "2331:248:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2414:9:2",
														"nodeType": "YulTypedName",
														"src": "2414:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2426:6:2",
														"nodeType": "YulTypedName",
														"src": "2426:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2437:4:2",
														"nodeType": "YulTypedName",
														"src": "2437:4:2",
														"type": ""
													}
												],
												"src": "2331:248:2"
											},
											{
												"body": {
													"nativeSrc": "2651:263:2",
													"nodeType": "YulBlock",
													"src": "2651:263:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2697:83:2",
																"nodeType": "YulBlock",
																"src": "2697:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2699:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "2699:77:2"
																			},
																			"nativeSrc": "2699:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2699:79:2"
																		},
																		"nativeSrc": "2699:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2699:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2672:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2672:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2681:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2681:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2668:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2668:3:2"
																		},
																		"nativeSrc": "2668:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2668:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2693:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2693:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2664:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2664:3:2"
																},
																"nativeSrc": "2664:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2664:32:2"
															},
															"nativeSrc": "2661:119:2",
															"nodeType": "YulIf",
															"src": "2661:119:2"
														},
														{
															"nativeSrc": "2790:117:2",
															"nodeType": "YulBlock",
															"src": "2790:117:2",
															"statements": [
																{
																	"nativeSrc": "2805:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2805:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2819:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2819:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2809:6:2",
																			"nodeType": "YulTypedName",
																			"src": "2809:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2834:63:2",
																	"nodeType": "YulAssignment",
																	"src": "2834:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2869:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "2869:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2880:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2880:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2865:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2865:3:2"
																				},
																				"nativeSrc": "2865:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2865:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2889:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2889:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2844:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "2844:20:2"
																		},
																		"nativeSrc": "2844:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2844:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2834:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2834:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2585:329:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2621:9:2",
														"nodeType": "YulTypedName",
														"src": "2621:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2632:7:2",
														"nodeType": "YulTypedName",
														"src": "2632:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2644:6:2",
														"nodeType": "YulTypedName",
														"src": "2644:6:2",
														"type": ""
													}
												],
												"src": "2585:329:2"
											},
											{
												"body": {
													"nativeSrc": "2985:53:2",
													"nodeType": "YulBlock",
													"src": "2985:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3002:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3002:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3025:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "3025:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3007:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "3007:17:2"
																		},
																		"nativeSrc": "3007:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3007:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2995:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2995:6:2"
																},
																"nativeSrc": "2995:37:2",
																"nodeType": "YulFunctionCall",
																"src": "2995:37:2"
															},
															"nativeSrc": "2995:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "2995:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2920:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2973:5:2",
														"nodeType": "YulTypedName",
														"src": "2973:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2980:3:2",
														"nodeType": "YulTypedName",
														"src": "2980:3:2",
														"type": ""
													}
												],
												"src": "2920:118:2"
											},
											{
												"body": {
													"nativeSrc": "3109:53:2",
													"nodeType": "YulBlock",
													"src": "3109:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3126:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3126:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3149:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "3149:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3131:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "3131:17:2"
																		},
																		"nativeSrc": "3131:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3131:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3119:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3119:6:2"
																},
																"nativeSrc": "3119:37:2",
																"nodeType": "YulFunctionCall",
																"src": "3119:37:2"
															},
															"nativeSrc": "3119:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "3119:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3044:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3097:5:2",
														"nodeType": "YulTypedName",
														"src": "3097:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3104:3:2",
														"nodeType": "YulTypedName",
														"src": "3104:3:2",
														"type": ""
													}
												],
												"src": "3044:118:2"
											},
											{
												"body": {
													"nativeSrc": "3294:206:2",
													"nodeType": "YulBlock",
													"src": "3294:206:2",
													"statements": [
														{
															"nativeSrc": "3304:26:2",
															"nodeType": "YulAssignment",
															"src": "3304:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3316:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3316:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3327:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3327:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3312:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3312:3:2"
																},
																"nativeSrc": "3312:18:2",
																"nodeType": "YulFunctionCall",
																"src": "3312:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3304:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3304:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3384:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3384:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3397:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3397:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3408:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3408:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3393:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3393:3:2"
																		},
																		"nativeSrc": "3393:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3393:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3340:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "3340:43:2"
																},
																"nativeSrc": "3340:71:2",
																"nodeType": "YulFunctionCall",
																"src": "3340:71:2"
															},
															"nativeSrc": "3340:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "3340:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3465:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3465:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3478:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3478:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3489:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3489:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3474:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3474:3:2"
																		},
																		"nativeSrc": "3474:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3474:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3421:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "3421:43:2"
																},
																"nativeSrc": "3421:72:2",
																"nodeType": "YulFunctionCall",
																"src": "3421:72:2"
															},
															"nativeSrc": "3421:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "3421:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3168:332:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3258:9:2",
														"nodeType": "YulTypedName",
														"src": "3258:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3270:6:2",
														"nodeType": "YulTypedName",
														"src": "3270:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3278:6:2",
														"nodeType": "YulTypedName",
														"src": "3278:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3289:4:2",
														"nodeType": "YulTypedName",
														"src": "3289:4:2",
														"type": ""
													}
												],
												"src": "3168:332:2"
											},
											{
												"body": {
													"nativeSrc": "3548:48:2",
													"nodeType": "YulBlock",
													"src": "3548:48:2",
													"statements": [
														{
															"nativeSrc": "3558:32:2",
															"nodeType": "YulAssignment",
															"src": "3558:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3583:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "3583:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3576:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "3576:6:2"
																		},
																		"nativeSrc": "3576:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3576:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3569:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:2"
																},
																"nativeSrc": "3569:21:2",
																"nodeType": "YulFunctionCall",
																"src": "3569:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3558:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "3558:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3506:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3530:5:2",
														"nodeType": "YulTypedName",
														"src": "3530:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3540:7:2",
														"nodeType": "YulTypedName",
														"src": "3540:7:2",
														"type": ""
													}
												],
												"src": "3506:90:2"
											},
											{
												"body": {
													"nativeSrc": "3642:76:2",
													"nodeType": "YulBlock",
													"src": "3642:76:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "3696:16:2",
																"nodeType": "YulBlock",
																"src": "3696:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3705:1:2",
																					"nodeType": "YulLiteral",
																					"src": "3705:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3708:1:2",
																					"nodeType": "YulLiteral",
																					"src": "3708:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3698:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3698:6:2"
																			},
																			"nativeSrc": "3698:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3698:12:2"
																		},
																		"nativeSrc": "3698:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3698:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3665:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "3665:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3687:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "3687:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3672:14:2",
																					"nodeType": "YulIdentifier",
																					"src": "3672:14:2"
																				},
																				"nativeSrc": "3672:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3672:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3662:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "3662:2:2"
																		},
																		"nativeSrc": "3662:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3662:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3655:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3655:6:2"
																},
																"nativeSrc": "3655:40:2",
																"nodeType": "YulFunctionCall",
																"src": "3655:40:2"
															},
															"nativeSrc": "3652:60:2",
															"nodeType": "YulIf",
															"src": "3652:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3602:116:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3635:5:2",
														"nodeType": "YulTypedName",
														"src": "3635:5:2",
														"type": ""
													}
												],
												"src": "3602:116:2"
											},
											{
												"body": {
													"nativeSrc": "3784:77:2",
													"nodeType": "YulBlock",
													"src": "3784:77:2",
													"statements": [
														{
															"nativeSrc": "3794:22:2",
															"nodeType": "YulAssignment",
															"src": "3794:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3809:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3809:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3803:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "3803:5:2"
																},
																"nativeSrc": "3803:13:2",
																"nodeType": "YulFunctionCall",
																"src": "3803:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3794:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "3794:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3849:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "3849:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3825:23:2",
																	"nodeType": "YulIdentifier",
																	"src": "3825:23:2"
																},
																"nativeSrc": "3825:30:2",
																"nodeType": "YulFunctionCall",
																"src": "3825:30:2"
															},
															"nativeSrc": "3825:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "3825:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "3724:137:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3762:6:2",
														"nodeType": "YulTypedName",
														"src": "3762:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3770:3:2",
														"nodeType": "YulTypedName",
														"src": "3770:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3778:5:2",
														"nodeType": "YulTypedName",
														"src": "3778:5:2",
														"type": ""
													}
												],
												"src": "3724:137:2"
											},
											{
												"body": {
													"nativeSrc": "3941:271:2",
													"nodeType": "YulBlock",
													"src": "3941:271:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:83:2",
																"nodeType": "YulBlock",
																"src": "3987:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3989:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "3989:77:2"
																			},
																			"nativeSrc": "3989:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3989:79:2"
																		},
																		"nativeSrc": "3989:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3989:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3962:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3962:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3971:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3971:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3958:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3958:3:2"
																		},
																		"nativeSrc": "3958:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3958:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3954:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3954:3:2"
																},
																"nativeSrc": "3954:32:2",
																"nodeType": "YulFunctionCall",
																"src": "3954:32:2"
															},
															"nativeSrc": "3951:119:2",
															"nodeType": "YulIf",
															"src": "3951:119:2"
														},
														{
															"nativeSrc": "4080:125:2",
															"nodeType": "YulBlock",
															"src": "4080:125:2",
															"statements": [
																{
																	"nativeSrc": "4095:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4095:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4109:1:2",
																		"nodeType": "YulLiteral",
																		"src": "4109:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4099:6:2",
																			"nodeType": "YulTypedName",
																			"src": "4099:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4124:71:2",
																	"nodeType": "YulAssignment",
																	"src": "4124:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4167:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "4167:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4178:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "4178:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4163:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "4163:3:2"
																				},
																				"nativeSrc": "4163:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "4163:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4187:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "4187:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "4134:28:2",
																			"nodeType": "YulIdentifier",
																			"src": "4134:28:2"
																		},
																		"nativeSrc": "4134:61:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4134:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4124:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "4124:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3867:345:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3911:9:2",
														"nodeType": "YulTypedName",
														"src": "3911:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3922:7:2",
														"nodeType": "YulTypedName",
														"src": "3922:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3934:6:2",
														"nodeType": "YulTypedName",
														"src": "3934:6:2",
														"type": ""
													}
												],
												"src": "3867:345:2"
											},
											{
												"body": {
													"nativeSrc": "4316:124:2",
													"nodeType": "YulBlock",
													"src": "4316:124:2",
													"statements": [
														{
															"nativeSrc": "4326:26:2",
															"nodeType": "YulAssignment",
															"src": "4326:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4338:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "4338:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4349:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4349:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4334:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4334:3:2"
																},
																"nativeSrc": "4334:18:2",
																"nodeType": "YulFunctionCall",
																"src": "4334:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4326:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "4326:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4406:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "4406:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4419:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4419:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4430:1:2",
																				"nodeType": "YulLiteral",
																				"src": "4430:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4415:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:2"
																		},
																		"nativeSrc": "4415:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4415:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4362:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "4362:43:2"
																},
																"nativeSrc": "4362:71:2",
																"nodeType": "YulFunctionCall",
																"src": "4362:71:2"
															},
															"nativeSrc": "4362:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "4362:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4218:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4288:9:2",
														"nodeType": "YulTypedName",
														"src": "4288:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4300:6:2",
														"nodeType": "YulTypedName",
														"src": "4300:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4311:4:2",
														"nodeType": "YulTypedName",
														"src": "4311:4:2",
														"type": ""
													}
												],
												"src": "4218:222:2"
											},
											{
												"body": {
													"nativeSrc": "4542:73:2",
													"nodeType": "YulBlock",
													"src": "4542:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4559:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "4559:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4564:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "4564:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4552:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4552:6:2"
																},
																"nativeSrc": "4552:19:2",
																"nodeType": "YulFunctionCall",
																"src": "4552:19:2"
															},
															"nativeSrc": "4552:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "4552:19:2"
														},
														{
															"nativeSrc": "4580:29:2",
															"nodeType": "YulAssignment",
															"src": "4580:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4599:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "4599:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4604:4:2",
																		"nodeType": "YulLiteral",
																		"src": "4604:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4595:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4595:3:2"
																},
																"nativeSrc": "4595:14:2",
																"nodeType": "YulFunctionCall",
																"src": "4595:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4580:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "4580:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4446:169:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4514:3:2",
														"nodeType": "YulTypedName",
														"src": "4514:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4519:6:2",
														"nodeType": "YulTypedName",
														"src": "4519:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4530:11:2",
														"nodeType": "YulTypedName",
														"src": "4530:11:2",
														"type": ""
													}
												],
												"src": "4446:169:2"
											},
											{
												"body": {
													"nativeSrc": "4727:58:2",
													"nodeType": "YulBlock",
													"src": "4727:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4749:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "4749:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4757:1:2",
																				"nodeType": "YulLiteral",
																				"src": "4757:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4745:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4745:3:2"
																		},
																		"nativeSrc": "4745:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4745:14:2"
																	},
																	{
																		"hexValue": "4d7573742073656e642041564158",
																		"kind": "string",
																		"nativeSrc": "4761:16:2",
																		"nodeType": "YulLiteral",
																		"src": "4761:16:2",
																		"type": "",
																		"value": "Must send AVAX"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4738:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4738:6:2"
																},
																"nativeSrc": "4738:40:2",
																"nodeType": "YulFunctionCall",
																"src": "4738:40:2"
															},
															"nativeSrc": "4738:40:2",
															"nodeType": "YulExpressionStatement",
															"src": "4738:40:2"
														}
													]
												},
												"name": "store_literal_in_memory_44ac248910427a03fc44baa148f35b4c487999862878dc11aa5d9379e97b9f58",
												"nativeSrc": "4621:164:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4719:6:2",
														"nodeType": "YulTypedName",
														"src": "4719:6:2",
														"type": ""
													}
												],
												"src": "4621:164:2"
											},
											{
												"body": {
													"nativeSrc": "4937:220:2",
													"nodeType": "YulBlock",
													"src": "4937:220:2",
													"statements": [
														{
															"nativeSrc": "4947:74:2",
															"nodeType": "YulAssignment",
															"src": "4947:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5013:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "5013:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5018:2:2",
																		"nodeType": "YulLiteral",
																		"src": "5018:2:2",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4954:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "4954:58:2"
																},
																"nativeSrc": "4954:67:2",
																"nodeType": "YulFunctionCall",
																"src": "4954:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4947:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4947:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5119:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "5119:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_44ac248910427a03fc44baa148f35b4c487999862878dc11aa5d9379e97b9f58",
																	"nativeSrc": "5030:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "5030:88:2"
																},
																"nativeSrc": "5030:93:2",
																"nodeType": "YulFunctionCall",
																"src": "5030:93:2"
															},
															"nativeSrc": "5030:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "5030:93:2"
														},
														{
															"nativeSrc": "5132:19:2",
															"nodeType": "YulAssignment",
															"src": "5132:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5143:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "5143:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5148:2:2",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5139:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "5139:3:2"
																},
																"nativeSrc": "5139:12:2",
																"nodeType": "YulFunctionCall",
																"src": "5139:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5132:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "5132:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_44ac248910427a03fc44baa148f35b4c487999862878dc11aa5d9379e97b9f58_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4791:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4925:3:2",
														"nodeType": "YulTypedName",
														"src": "4925:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4933:3:2",
														"nodeType": "YulTypedName",
														"src": "4933:3:2",
														"type": ""
													}
												],
												"src": "4791:366:2"
											},
											{
												"body": {
													"nativeSrc": "5334:248:2",
													"nodeType": "YulBlock",
													"src": "5334:248:2",
													"statements": [
														{
															"nativeSrc": "5344:26:2",
															"nodeType": "YulAssignment",
															"src": "5344:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5356:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "5356:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5367:2:2",
																		"nodeType": "YulLiteral",
																		"src": "5367:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5352:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "5352:3:2"
																},
																"nativeSrc": "5352:18:2",
																"nodeType": "YulFunctionCall",
																"src": "5352:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5344:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "5344:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5391:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "5391:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5402:1:2",
																				"nodeType": "YulLiteral",
																				"src": "5402:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5387:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5387:3:2"
																		},
																		"nativeSrc": "5387:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5387:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5410:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "5410:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5416:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "5416:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5406:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5406:3:2"
																		},
																		"nativeSrc": "5406:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5406:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5380:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:2"
																},
																"nativeSrc": "5380:47:2",
																"nodeType": "YulFunctionCall",
																"src": "5380:47:2"
															},
															"nativeSrc": "5380:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "5380:47:2"
														},
														{
															"nativeSrc": "5436:139:2",
															"nodeType": "YulAssignment",
															"src": "5436:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5570:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "5570:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_44ac248910427a03fc44baa148f35b4c487999862878dc11aa5d9379e97b9f58_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5444:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "5444:124:2"
																},
																"nativeSrc": "5444:131:2",
																"nodeType": "YulFunctionCall",
																"src": "5444:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5436:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "5436:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_44ac248910427a03fc44baa148f35b4c487999862878dc11aa5d9379e97b9f58__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5163:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5314:9:2",
														"nodeType": "YulTypedName",
														"src": "5314:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5329:4:2",
														"nodeType": "YulTypedName",
														"src": "5329:4:2",
														"type": ""
													}
												],
												"src": "5163:419:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IWAVAX_$91_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IWAVAX_$91_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IWAVAX_$91_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IWAVAX_$91__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IWAVAX_$91_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_44ac248910427a03fc44baa148f35b4c487999862878dc11aa5d9379e97b9f58(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must send AVAX\")\n\n    }\n\n    function abi_encode_t_stringliteral_44ac248910427a03fc44baa148f35b4c487999862878dc11aa5d9379e97b9f58_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_44ac248910427a03fc44baa148f35b4c487999862878dc11aa5d9379e97b9f58(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_44ac248910427a03fc44baa148f35b4c487999862878dc11aa5d9379e97b9f58__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44ac248910427a03fc44baa148f35b4c487999862878dc11aa5d9379e97b9f58_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061003e575f3560e01c806308b9642b1461004257806373b295c21461006a578063ee42ba0f14610094578063f4fbbca2146100bc575b5f80fd5b34801561004d575f80fd5b50610068600480360381019061006391906103a5565b6100c6565b005b348015610075575f80fd5b5061007e610165565b60405161008b919061043e565b60405180910390f35b34801561009f575f80fd5b506100ba60048036038101906100b59190610457565b610188565b005b6100c4610254565b005b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016101209291906104a0565b6020604051808303815f875af115801561013c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061016091906104fc565b505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b81526004016101e09190610527565b5f604051808303815f87803b1580156101f7575f80fd5b505af1158015610209573d5f803e3d5ffd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610250573d5f803e3d5ffd5b5050565b5f3411610296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028d9061059a565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b1580156102fb575f80fd5b505af115801561030d573d5f803e3d5ffd5b5050505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61034182610318565b9050919050565b61035181610337565b811461035b575f80fd5b50565b5f8135905061036c81610348565b92915050565b5f819050919050565b61038481610372565b811461038e575f80fd5b50565b5f8135905061039f8161037b565b92915050565b5f80604083850312156103bb576103ba610314565b5b5f6103c88582860161035e565b92505060206103d985828601610391565b9150509250929050565b5f819050919050565b5f6104066104016103fc84610318565b6103e3565b610318565b9050919050565b5f610417826103ec565b9050919050565b5f6104288261040d565b9050919050565b6104388161041e565b82525050565b5f6020820190506104515f83018461042f565b92915050565b5f6020828403121561046c5761046b610314565b5b5f61047984828501610391565b91505092915050565b61048b81610337565b82525050565b61049a81610372565b82525050565b5f6040820190506104b35f830185610482565b6104c06020830184610491565b9392505050565b5f8115159050919050565b6104db816104c7565b81146104e5575f80fd5b50565b5f815190506104f6816104d2565b92915050565b5f6020828403121561051157610510610314565b5b5f61051e848285016104e8565b91505092915050565b5f60208201905061053a5f830184610491565b92915050565b5f82825260208201905092915050565b7f4d7573742073656e6420415641580000000000000000000000000000000000005f82015250565b5f610584600e83610540565b915061058f82610550565b602082019050919050565b5f6020820190508181035f8301526105b181610578565b905091905056fea2646970667358221220047b3894bc1d6e1826decc6467ff2c4bf1ea34c0d1b1386374b5662e1389f89d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B9642B EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x73B295C2 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0xEE42BA0F EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xF4FBBCA2 EQ PUSH2 0xBC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0xC6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x457 JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC4 PUSH2 0x254 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120 SWAP3 SWAP2 SWAP1 PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x4FC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x527 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x209 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x250 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D SWAP1 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x30D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x341 DUP3 PUSH2 0x318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x351 DUP2 PUSH2 0x337 JUMP JUMPDEST DUP2 EQ PUSH2 0x35B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36C DUP2 PUSH2 0x348 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x384 DUP2 PUSH2 0x372 JUMP JUMPDEST DUP2 EQ PUSH2 0x38E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x39F DUP2 PUSH2 0x37B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x314 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C8 DUP6 DUP3 DUP7 ADD PUSH2 0x35E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3D9 DUP6 DUP3 DUP7 ADD PUSH2 0x391 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x406 PUSH2 0x401 PUSH2 0x3FC DUP5 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST PUSH2 0x318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x417 DUP3 PUSH2 0x3EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x428 DUP3 PUSH2 0x40D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x438 DUP2 PUSH2 0x41E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x451 PUSH0 DUP4 ADD DUP5 PUSH2 0x42F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46C JUMPI PUSH2 0x46B PUSH2 0x314 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x479 DUP5 DUP3 DUP6 ADD PUSH2 0x391 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x48B DUP2 PUSH2 0x337 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x49A DUP2 PUSH2 0x372 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4B3 PUSH0 DUP4 ADD DUP6 PUSH2 0x482 JUMP JUMPDEST PUSH2 0x4C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x491 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DB DUP2 PUSH2 0x4C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x4E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4F6 DUP2 PUSH2 0x4D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x511 JUMPI PUSH2 0x510 PUSH2 0x314 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x51E DUP5 DUP3 DUP6 ADD PUSH2 0x4E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x53A PUSH0 DUP4 ADD DUP5 PUSH2 0x491 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642041564158000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x584 PUSH1 0xE DUP4 PUSH2 0x540 JUMP JUMPDEST SWAP2 POP PUSH2 0x58F DUP3 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5B1 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV PUSH28 0x3894BC1D6E1826DECC6467FF2C4BF1EA34C0D1B1386374B5662E1389 0xF8 SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "252:530:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:102;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;281:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;538:131;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;390:140;;;:::i;:::-;;677:102;745:5;;;;;;;;;;:14;;;760:2;764:6;745:26;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;677:102;;:::o;281:19::-;;;;;;;;;;;;:::o;538:131::-;592:5;;;;;;;;;;:14;;;607:6;592:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;633:10;625:28;;:36;654:6;625:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;538:131;:::o;390:140::-;458:1;446:9;:13;438:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;489:5;;;;;;;;;;:13;;;510:9;489:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;390:140::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:60::-;1705:3;1726:5;1719:12;;1677:60;;;:::o;1743:142::-;1793:9;1826:53;1844:34;1853:24;1871:5;1853:24;:::i;:::-;1844:34;:::i;:::-;1826:53;:::i;:::-;1813:66;;1743:142;;;:::o;1891:126::-;1941:9;1974:37;2005:5;1974:37;:::i;:::-;1961:50;;1891:126;;;:::o;2023:139::-;2086:9;2119:37;2150:5;2119:37;:::i;:::-;2106:50;;2023:139;;;:::o;2168:157::-;2268:50;2312:5;2268:50;:::i;:::-;2263:3;2256:63;2168:157;;:::o;2331:248::-;2437:4;2475:2;2464:9;2460:18;2452:26;;2488:84;2569:1;2558:9;2554:17;2545:6;2488:84;:::i;:::-;2331:248;;;;:::o;2585:329::-;2644:6;2693:2;2681:9;2672:7;2668:23;2664:32;2661:119;;;2699:79;;:::i;:::-;2661:119;2819:1;2844:53;2889:7;2880:6;2869:9;2865:22;2844:53;:::i;:::-;2834:63;;2790:117;2585:329;;;;:::o;2920:118::-;3007:24;3025:5;3007:24;:::i;:::-;3002:3;2995:37;2920:118;;:::o;3044:::-;3131:24;3149:5;3131:24;:::i;:::-;3126:3;3119:37;3044:118;;:::o;3168:332::-;3289:4;3327:2;3316:9;3312:18;3304:26;;3340:71;3408:1;3397:9;3393:17;3384:6;3340:71;:::i;:::-;3421:72;3489:2;3478:9;3474:18;3465:6;3421:72;:::i;:::-;3168:332;;;;;:::o;3506:90::-;3540:7;3583:5;3576:13;3569:21;3558:32;;3506:90;;;:::o;3602:116::-;3672:21;3687:5;3672:21;:::i;:::-;3665:5;3662:32;3652:60;;3708:1;3705;3698:12;3652:60;3602:116;:::o;3724:137::-;3778:5;3809:6;3803:13;3794:22;;3825:30;3849:5;3825:30;:::i;:::-;3724:137;;;;:::o;3867:345::-;3934:6;3983:2;3971:9;3962:7;3958:23;3954:32;3951:119;;;3989:79;;:::i;:::-;3951:119;4109:1;4134:61;4187:7;4178:6;4167:9;4163:22;4134:61;:::i;:::-;4124:71;;4080:125;3867:345;;;;:::o;4218:222::-;4311:4;4349:2;4338:9;4334:18;4326:26;;4362:71;4430:1;4419:9;4415:17;4406:6;4362:71;:::i;:::-;4218:222;;;;:::o;4446:169::-;4530:11;4564:6;4559:3;4552:19;4604:4;4599:3;4595:14;4580:29;;4446:169;;;;:::o;4621:164::-;4761:16;4757:1;4749:6;4745:14;4738:40;4621:164;:::o;4791:366::-;4933:3;4954:67;5018:2;5013:3;4954:67;:::i;:::-;4947:74;;5030:93;5119:3;5030:93;:::i;:::-;5148:2;5143:3;5139:12;5132:19;;4791:366;;;:::o;5163:419::-;5329:4;5367:2;5356:9;5352:18;5344:26;;5416:9;5410:4;5406:20;5402:1;5391:9;5387:17;5380:47;5444:131;5570:4;5444:131;:::i;:::-;5436:139;;5163:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "303600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WAVAX()": "infinite",
								"transferWAVAX(address,uint256)": "infinite",
								"unwrapWAVAX(uint256)": "infinite",
								"wrapAVAX()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 252,
									"end": 782,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 252,
									"end": 782,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 382,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 382,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 382,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 313,
									"end": 382,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 313,
									"end": 382,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 313,
									"end": 382,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 313,
									"end": 382,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 313,
									"end": 382,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 367,
									"end": 373,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 352,
									"end": 357,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 352,
									"end": 357,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 352,
									"end": 374,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 352,
									"end": 374,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 352,
									"end": 374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 352,
									"end": 374,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 352,
									"end": 374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 352,
									"end": 374,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 352,
									"end": 374,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 352,
									"end": 374,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 352,
									"end": 374,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 352,
									"end": 374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 352,
									"end": 374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 352,
									"end": 374,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 352,
									"end": 374,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 352,
									"end": 374,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 352,
									"end": 374,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 352,
									"end": 374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 352,
									"end": 374,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 352,
									"end": 374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 313,
									"end": 382,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 252,
									"end": 782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 252,
									"end": 782,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 252,
									"end": 782,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 252,
									"end": 782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 252,
									"end": 782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 252,
									"end": 782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 252,
									"end": 782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220047b3894bc1d6e1826decc6467ff2c4bf1ea34c0d1b1386374b5662e1389f89d64736f6c634300081a0033",
									".code": [
										{
											"begin": 252,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 252,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 782,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 782,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 782,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 252,
											"end": 782,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "8B9642B"
										},
										{
											"begin": 252,
											"end": 782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 782,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "73B295C2"
										},
										{
											"begin": 252,
											"end": 782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 252,
											"end": 782,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "EE42BA0F"
										},
										{
											"begin": 252,
											"end": 782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 782,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "F4FBBCA2"
										},
										{
											"begin": 252,
											"end": 782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 252,
											"end": 782,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 252,
											"end": 782,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 677,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 677,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 677,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 677,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 677,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 677,
											"end": 779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 677,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 677,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 677,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 677,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 281,
											"end": 300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 538,
											"end": 669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 538,
											"end": 669,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 669,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 538,
											"end": 669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 538,
											"end": 669,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 538,
											"end": 669,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 538,
											"end": 669,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 538,
											"end": 669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 538,
											"end": 669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 538,
											"end": 669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 390,
											"end": 530,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 390,
											"end": 530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 390,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 390,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 390,
											"end": 530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 390,
											"end": 530,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 390,
											"end": 530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 390,
											"end": 530,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 677,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 745,
											"end": 750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 750,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 745,
											"end": 750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 750,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 745,
											"end": 750,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 750,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 745,
											"end": 750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 745,
											"end": 750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 745,
											"end": 759,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 745,
											"end": 759,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 745,
											"end": 759,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 760,
											"end": 762,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 764,
											"end": 770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 745,
											"end": 771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 745,
											"end": 771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 745,
											"end": 771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 281,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 592,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 597,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 592,
											"end": 597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 592,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 592,
											"end": 606,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 592,
											"end": 606,
											"name": "PUSH",
											"source": 1,
											"value": "2E1A7D4D"
										},
										{
											"begin": 607,
											"end": 613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 614,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 592,
											"end": 614,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 592,
											"end": 614,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 592,
											"end": 614,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 592,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 592,
											"end": 614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 614,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 614,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 614,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 592,
											"end": 614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 592,
											"end": 614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 592,
											"end": 614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 614,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 592,
											"end": 614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 643,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 625,
											"end": 653,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 654,
											"end": 660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 661,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 661,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 661,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 625,
											"end": 661,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 661,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 661,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 625,
											"end": 661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 625,
											"end": 661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 538,
											"end": 669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 390,
											"end": 530,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 390,
											"end": 530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 455,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 438,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 438,
											"end": 478,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 438,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 478,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 438,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 438,
											"end": 478,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 438,
											"end": 478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 438,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 438,
											"end": 478,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 438,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 438,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 438,
											"end": 478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 438,
											"end": 478,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 438,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 478,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 438,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 438,
											"end": 478,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 438,
											"end": 478,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 438,
											"end": 478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 438,
											"end": 478,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 438,
											"end": 478,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 438,
											"end": 478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 489,
											"end": 494,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 489,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 489,
											"end": 494,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 489,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 489,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 489,
											"end": 502,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 489,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "D0E30DB0"
										},
										{
											"begin": 510,
											"end": 519,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 489,
											"end": 522,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 489,
											"end": 522,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 489,
											"end": 522,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 489,
											"end": 522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 489,
											"end": 522,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 489,
											"end": 522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 489,
											"end": 522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 489,
											"end": 522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 522,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 489,
											"end": 522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 390,
											"end": 530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1737,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1677,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1731,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1737,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1885,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1743,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1844,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1853,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1871,
											"end": 1876,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1853,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1853,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1844,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1878,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1844,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1826,
											"end": 1879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1879,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1826,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1879,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1879,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 2017,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1891,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1950,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1974,
											"end": 2011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2011,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1974,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 2011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 2011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 2017,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 2017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 2017,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 2017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2023,
											"end": 2162,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2023,
											"end": 2162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2150,
											"end": 2155,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2119,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2119,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2023,
											"end": 2162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2023,
											"end": 2162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2023,
											"end": 2162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2023,
											"end": 2162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2325,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2168,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2312,
											"end": 2317,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2268,
											"end": 2318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2319,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2325,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2325,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2331,
											"end": 2579,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2331,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2437,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2477,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2464,
											"end": 2473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2478,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2567,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2571,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2488,
											"end": 2572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2572,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2488,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2331,
											"end": 2579,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2331,
											"end": 2579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2331,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2331,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2331,
											"end": 2579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2914,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2585,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2650,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2695,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2679,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2661,
											"end": 2780,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2661,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2661,
											"end": 2780,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2699,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2699,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2699,
											"end": 2778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2699,
											"end": 2778,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2699,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2661,
											"end": 2780,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2661,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2889,
											"end": 2896,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2886,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2869,
											"end": 2878,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2844,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2844,
											"end": 2897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2844,
											"end": 2897,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2844,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2914,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2914,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 3038,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2920,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3025,
											"end": 3030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3007,
											"end": 3031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3031,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3007,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3005,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 3038,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 3038,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 3038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3162,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3044,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3149,
											"end": 3154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3131,
											"end": 3155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3155,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3131,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3126,
											"end": 3129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3500,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3168,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3327,
											"end": 3329,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3316,
											"end": 3325,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3312,
											"end": 3330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3408,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3406,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3390,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3340,
											"end": 3411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3411,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3340,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3421,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3478,
											"end": 3487,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3474,
											"end": 3492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3421,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3421,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3421,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3421,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3500,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3500,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3500,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3500,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3500,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3596,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3506,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3540,
											"end": 3547,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 3589,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3590,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3596,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3602,
											"end": 3718,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3602,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3687,
											"end": 3692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3672,
											"end": 3693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3693,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3672,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3670,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3662,
											"end": 3694,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3652,
											"end": 3712,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3706,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3698,
											"end": 3710,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3712,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3652,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3602,
											"end": 3718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3602,
											"end": 3718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3724,
											"end": 3861,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3724,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3816,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3794,
											"end": 3816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3794,
											"end": 3816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3825,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3849,
											"end": 3854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3825,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3825,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3825,
											"end": 3855,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3825,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3724,
											"end": 3861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3724,
											"end": 3861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3724,
											"end": 3861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3724,
											"end": 3861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3724,
											"end": 3861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 4212,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3867,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 3985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3971,
											"end": 3980,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3962,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3958,
											"end": 3981,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3954,
											"end": 3986,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4070,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3951,
											"end": 4070,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3989,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3989,
											"end": 4068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4068,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3989,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4070,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3951,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4109,
											"end": 4110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4187,
											"end": 4194,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4184,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4176,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4185,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4134,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4134,
											"end": 4195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4134,
											"end": 4195,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4134,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4195,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4080,
											"end": 4205,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 4212,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 4212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 4212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 4212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 4212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4218,
											"end": 4440,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4218,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4311,
											"end": 4315,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4338,
											"end": 4347,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4430,
											"end": 4431,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4428,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4415,
											"end": 4432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4412,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4362,
											"end": 4433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4433,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4362,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4218,
											"end": 4440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4218,
											"end": 4440,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4218,
											"end": 4440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4218,
											"end": 4440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4218,
											"end": 4440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4446,
											"end": 4615,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4446,
											"end": 4615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4530,
											"end": 4541,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4570,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4559,
											"end": 4562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4552,
											"end": 4571,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4604,
											"end": 4608,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4599,
											"end": 4602,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4595,
											"end": 4609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4580,
											"end": 4609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4580,
											"end": 4609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4446,
											"end": 4615,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4446,
											"end": 4615,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4446,
											"end": 4615,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4446,
											"end": 4615,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4446,
											"end": 4615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4621,
											"end": 4785,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4621,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4761,
											"end": 4777,
											"name": "PUSH",
											"source": 2,
											"value": "4D7573742073656E642041564158000000000000000000000000000000000000"
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4745,
											"end": 4759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4738,
											"end": 4778,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4621,
											"end": 4785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4621,
											"end": 4785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4791,
											"end": 5157,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4791,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4933,
											"end": 4936,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4954,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5018,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 5013,
											"end": 5016,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4954,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4954,
											"end": 5021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4954,
											"end": 5021,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4954,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 5021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 5021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5119,
											"end": 5122,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5030,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5123,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5030,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5143,
											"end": 5146,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5132,
											"end": 5151,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5132,
											"end": 5151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4791,
											"end": 5157,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4791,
											"end": 5157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4791,
											"end": 5157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4791,
											"end": 5157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5163,
											"end": 5582,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5163,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5329,
											"end": 5333,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5369,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5356,
											"end": 5365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5352,
											"end": 5370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5344,
											"end": 5370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5344,
											"end": 5370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5416,
											"end": 5425,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5410,
											"end": 5414,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5406,
											"end": 5426,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5402,
											"end": 5403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5391,
											"end": 5400,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5387,
											"end": 5404,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5427,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5444,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5570,
											"end": 5574,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5444,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5444,
											"end": 5575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5444,
											"end": 5575,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5444,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5436,
											"end": 5575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5436,
											"end": 5575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5163,
											"end": 5582,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5163,
											"end": 5582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5163,
											"end": 5582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5163,
											"end": 5582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"WVAX,sol.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"WAVAX()": "73b295c2",
							"transferWAVAX(address,uint256)": "08b9642b",
							"unwrapWAVAX(uint256)": "ee42ba0f",
							"wrapAVAX()": "f4fbbca2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wavax\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WAVAX\",\"outputs\":[{\"internalType\":\"contract IWAVAX\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferWAVAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unwrapWAVAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapAVAX\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"WVAX,sol.sol\":\"WAVAXExample\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"WVAX,sol.sol\":{\"keccak256\":\"0x2b18551372bc03fe628c569dd69da8f30ff937f3a1b53cdbdbf9c3d27b6a2dc6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a3849fb94a579b18b2aca7c2dd1f6779f8b4b58db9ccb121a055137d4257e2bc\",\"dweb:/ipfs/QmXGEsUvKda5tuvuHreZi8mLNwnnZ62HJvez8tBvkuy4tT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 94,
								"contract": "WVAX,sol.sol:WAVAXExample",
								"label": "WAVAX",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWAVAX)91"
							}
						],
						"types": {
							"t_contract(IWAVAX)91": {
								"encoding": "inplace",
								"label": "contract IWAVAX",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				},
				"id": 0
			},
			"WVAX,sol.sol": {
				"ast": {
					"absolutePath": "WVAX,sol.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IWAVAX": [
							91
						],
						"WAVAXExample": [
							163
						]
					},
					"id": 164,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 164,
							"sourceUnit": 78,
							"src": "72:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 81,
										"name": "IERC20",
										"nameLocations": [
											"152:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "152:6:1"
									},
									"id": 82,
									"nodeType": "InheritanceSpecifier",
									"src": "152:6:1"
								}
							],
							"canonicalName": "IWAVAX",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91,
								77
							],
							"name": "IWAVAX",
							"nameLocation": "142:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 85,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "175:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "182:2:1"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "201:0:1"
									},
									"scope": 91,
									"src": "166:36:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "217:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "231:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "226:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "226:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "225:10:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "244:0:1"
									},
									"scope": 91,
									"src": "208:37:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 164,
							"src": "132:116:1",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "WAVAXExample",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 163,
							"linearizedBaseContracts": [
								163
							],
							"name": "WAVAXExample",
							"nameLocation": "261:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "73b295c2",
									"id": 94,
									"mutability": "mutable",
									"name": "WAVAX",
									"nameLocation": "295:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 163,
									"src": "281:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWAVAX_$91",
										"typeString": "contract IWAVAX"
									},
									"typeName": {
										"id": 93,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 92,
											"name": "IWAVAX",
											"nameLocations": [
												"281:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 91,
											"src": "281:6:1"
										},
										"referencedDeclaration": 91,
										"src": "281:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWAVAX_$91",
											"typeString": "contract IWAVAX"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "341:41:1",
										"statements": [
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 99,
														"name": "WAVAX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "352:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWAVAX_$91",
															"typeString": "contract IWAVAX"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 101,
																"name": "_wavax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "367:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "IWAVAX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "360:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWAVAX_$91_$",
																"typeString": "type(contract IWAVAX)"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "360:14:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWAVAX_$91",
															"typeString": "contract IWAVAX"
														}
													},
													"src": "352:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWAVAX_$91",
														"typeString": "contract IWAVAX"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "352:22:1"
											}
										]
									},
									"id": 106,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "_wavax",
												"nameLocation": "333:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "325:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:16:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "341:0:1"
									},
									"scope": 163,
									"src": "313:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "427:103:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 110,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "446:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "450:5:1",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "446:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "458:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "446:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e642041564158",
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "461:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44ac248910427a03fc44baa148f35b4c487999862878dc11aa5d9379e97b9f58",
																"typeString": "literal_string \"Must send AVAX\""
															},
															"value": "Must send AVAX"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44ac248910427a03fc44baa148f35b4c487999862878dc11aa5d9379e97b9f58",
																"typeString": "literal_string \"Must send AVAX\""
															}
														],
														"id": 109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "438:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "438:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "438:40:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 117,
																"name": "WAVAX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "489:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWAVAX_$91",
																	"typeString": "contract IWAVAX"
																}
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "495:7:1",
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 85,
															"src": "489:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 120,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "510:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "514:5:1",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "510:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "489:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "489:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "489:33:1"
											}
										]
									},
									"functionSelector": "f4fbbca2",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wrapAVAX",
									"nameLocation": "399:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "407:2:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "427:0:1"
									},
									"scope": 163,
									"src": "390:140:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "581:88:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 134,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "607:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 131,
															"name": "WAVAX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "592:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWAVAX_$91",
																"typeString": "contract IWAVAX"
															}
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "598:8:1",
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 90,
														"src": "592:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "592:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "592:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "654:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 139,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "633:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "637:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "633:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "625:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "625:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "625:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "645:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "625:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "625:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "625:36:1"
											}
										]
									},
									"functionSelector": "ee42ba0f",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapWAVAX",
									"nameLocation": "547:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "564:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "559:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "559:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:13:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "581:0:1"
									},
									"scope": 163,
									"src": "538:131:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "734:45:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 157,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "760:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 158,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "764:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 154,
															"name": "WAVAX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "745:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWAVAX_$91",
																"typeString": "contract IWAVAX"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "751:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "745:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "745:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "745:26:1"
											}
										]
									},
									"functionSelector": "08b9642b",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferWAVAX",
									"nameLocation": "686:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "708:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "700:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "717:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "712:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "699:25:1"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:0:1"
									},
									"scope": 163,
									"src": "677:102:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 164,
							"src": "252:530:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:747:1"
				},
				"id": 1
			}
		}
	}
}